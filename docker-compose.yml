# sudo dlite install --share /Volumes/projects
# dlite stop && sudo dlite install -v 2.3.0 --share=/Volumes/projects && dlite start
# dlite update -v 2.3.0
# sudo dlite daemon
# ssh root@local.docker : dhyve
#~/.dlite/config.json
#
# Some cleanup tips: http://jimhoskins.com/2013/07/27/remove-untagged-docker-images.html
#

#
# http://zaiste.net/2014/09/removing_docker_containers/
# http://blog.yohanliyanage.com/2015/05/docker-clean-up-after-yourself/
#
# Remove exited containes
# docker rm -v $(docker ps -a -q -f status=exited)
#
# Remove dangling/untagged containers
# docker images -q --filter dangling=true | xargs docker rmi
#
# http://lukeswart.net/2016/03/lets-deploy-part-1/
#
# cat /var/db/dhcpd_leases
#
version: '2'
services:

  php-fpm:
    container_name: ms-php
    #image: mothership/docker_magento:php7
    build: dockerfiles/php-fpm
    networks:
      mothership: { aliases: [ "link_php" ] }
    environment:
      XDEBUG_CONFIG: "idekey=PHPSTORM"
    restart: always
    volumes:
      - ${PROJECT_VOlUME}/htdocs:/var/www/share/dev/htdocs

      # Allow a persistent bash history by mounting a host file
      - ${PROJECT_VOlUME}/home/.bash_history:/root/.bash_history
      - ./dockerfiles/php-fpm/home/.bashrc:/root/.bashrc
      - ./dockerfiles/php-fpm/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini

  nginx:
    container_name: ms-nginx
    image: nginx:1.11
    restart: always
    volumes:
      - ${PROJECT_VOlUME}/htdocs:/var/www/share/dev/htdocs

      # configuration
      - ./container_configuration/nginx/generated/magento.conf:/etc/nginx/conf.d/default.conf:ro
      - ./container_configuration/nginx/generated/nginx.crt:/etc/nginx/ssl/magento.crt:ro
      - ./container_configuration/nginx/generated/nginx.key:/etc/nginx/ssl/magento.key:ro
    depends_on:
      - php-fpm
    networks:
      - mothership
    ports:
      - 80:80
      - 443:443

  mailcatcher:
    container_name: ms-mail
    image: schickling/mailcatcher
    restart: always
    networks:
      mothership: { aliases: [ "link_mailcatcher" ] }
    ports:
      - 1025:1025
      - 1080:1080

  maria_db:
    container_name: ms-db
    image: mariadb
    restart: always
    environment:
      MYSQL_USER: super
      MYSQL_PASSWORD: super123
      MYSQL_DATABASE: dev
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ${PROJECT_VOlUME}/db:/var/lib/mysql

      # Add the dumps into that directory so that the database will be built automatically
      - ./container_configuration/db/dump:/docker-entrypoint-initdb.d
    ports:
      - ${DOCKER_IP}:3306:3306
    networks:
      mothership: { aliases: [ "link_mariadb" ] }

  elasticsearch:
    container_name: ms-es
    image:  elasticsearch:2.3.3
    restart: always
    volumes:
      - ${PROJECT_VOlUME}/elasticsearch/data:/usr/share/elasticsearch/data
      - ${PROJECT_VOlUME}/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - ${DOCKER_IP}:9200:9200
      - ${DOCKER_IP}:9300:9300
    command: /usr/share/elasticsearch/bin/elasticsearch -Des.insecure.allow.root=true
    networks:
      mothership: { aliases: [ "link_elastic" ] }

  mongodb:
    container_name: ms-mongo
    image: mongo:3.4.2
    restart: always
    volumes:
      - ${PROJECT_VOlUME}/mongodb/data:/data/db
    ports:
      - ${DOCKER_IP}:27017:27017
    networks:
      mothership: { aliases: [ "link_mongo" ] }

  # https://hub.docker.com/_/rabbitmq/
  rabbitmq:
    container_name: ms-queue
    image:   rabbitmq:3.6.6-management
    restart: always
    environment:
      RABBITMQ_NODENAME: quefo
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    ports:
      - ${DOCKER_IP}:15672:15672
      - ${DOCKER_IP}:5672:5672
    networks:
      mothership: { aliases: [ "libk_mq" ] }

networks:
  mothership:
    driver: bridge